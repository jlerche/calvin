// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import util "github.com/mhelmich/calvin/util"

// DataStore is an autogenerated mock type for the DataStore type
type DataStore struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *DataStore) Get(key []byte) []byte {
	ret := _m.Called(key)

	var r0 []byte
	if rf, ok := ret.Get(0).(func([]byte) []byte); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// Set provides a mock function with given fields: key, value
func (_m *DataStore) Set(key []byte, value []byte) {
	_m.Called(key, value)
}

// StartTxn provides a mock function with given fields: writable
func (_m *DataStore) StartTxn(writable bool) (util.DataStoreTxn, error) {
	ret := _m.Called(writable)

	var r0 util.DataStoreTxn
	if rf, ok := ret.Get(0).(func(bool) util.DataStoreTxn); ok {
		r0 = rf(writable)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(util.DataStoreTxn)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(bool) error); ok {
		r1 = rf(writable)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
